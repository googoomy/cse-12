41 2 0
38 1
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
22 64 272 264 252 0 \NUL
Part A Output                            
8 216 184 265 135 1 0
8 280 184 329 135 1 0
8 352 184 401 135 1 0
11 168 424 195 326 0 1
20 264 208 331 189 0
in_3
20 336 208 403 189 0
in_2
20 408 208 475 189 0
in_1
8 424 184 473 135 1 0
20 480 208 547 189 0
in_0
19 72 312 139 293 0
a_3
19 56 336 123 317 0
a_2
19 40 360 107 341 0
a_1
19 24 384 91 365 0
a_0
22 10 446 345 426 0 \NUL
Part A has 16 outputs because there are 2^4 cases.
22 452 438 739 418 0 \NUL
Part B's outputs follow the given truth table.
7 360 664 409 615 0 1
7 360 704 409 655 0 1
19 264 592 331 573 0
c_2
19 264 632 331 613 0
c_1
19 264 672 331 653 0
c_0
22 416 688 480 668 0 \NUL
SOP/POS
22 416 648 492 628 0 \NUL
NAND Only
22 416 608 484 588 0 \NUL
NOR Only
22 452 464 735 444 0 \NUL
For example with input 1111, output is 010.
22 272 744 558 724 0 \NUL
Part C's outputs follow the given truth table.
22 272 768 598 748 0 \NUL
Even using different gates, the output is the same
22 280 32 653 12 0 \NUL
You are only permitted to modify or add text to this page.
22 280 56 605 36 0 \NUL
Your circuit must use senders and/or receivers to
22 280 80 538 60 0 \NUL
interface with these inputs and outputs.
7 472 360 521 311 0 1
7 544 360 593 311 0 1
7 616 360 665 311 0 1
19 408 392 475 373 0
b_2
19 480 392 547 373 0
b_1
19 552 392 619 373 0
b_0
7 360 624 409 575 0 1
22 64 136 616 116 0 \NUL
Input                                                                                                                                 
22 448 272 650 252 0 \NUL
Part B Output                            
22 272 552 473 532 0 \NUL
Part C Output                            
22 9 468 274 448 0 \NUL
Each of the 4 inputs can either be 0 or 1.
22 9 490 434 470 0 \NUL
The ouputs are the digits 0-9 and following that are the letters a-f.
22 9 514 329 494 0 \NUL
Each binary input has a hexadecimal equivalent.
22 9 537 258 517 0 \NUL
For example, 1001 is 9 and 1110 is e.
22 272 791 492 771 0 \NUL
for every part (c_2, c_1, and c_0).
1 470 159 481 198
1 409 198 398 159
1 337 198 326 159
1 265 198 262 159
1 169 390 136 302
1 169 396 120 326
1 169 402 104 350
1 169 408 88 374
1 328 622 361 639
1 328 662 361 679
1 472 382 473 335
1 544 382 545 335
1 616 382 617 335
1 328 582 361 599
38 2
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
19 24 216 91 197 0
in_3
19 24 240 91 221 0
in_2
19 24 264 91 245 0
in_1
19 24 288 91 269 0
in_0
22 24 600 390 580 0 \NUL
these are only present so circuit simulates without error
22 24 624 291 604 0 \NUL
remove these once logic is implemented
22 32 184 262 164 0 \NUL
placeholder senders and receivers
22 209 350 645 330 0 \NUL
We suggest building each part on a new page using the -/+ buttons
38 3
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
19 9 203 76 184 0
in_3
19 9 227 76 208 0
in_2
19 9 251 76 232 0
in_1
19 9 275 76 256 0
in_0
22 6 145 52 125 0 \NUL
Part A:
22 7 438 342 418 0 \NUL
Part A has 16 outputs because there are 2^4 cases.
22 6 460 271 440 0 \NUL
Each of the 4 inputs can either be 0 or 1.
22 6 482 431 462 0 \NUL
The ouputs are the digits 0-9 and following that are the letters a-f.
22 6 506 326 486 0 \NUL
Each binary input has a hexadecimal equivalent.
22 6 529 255 509 0 \NUL
For example, 1001 is 9 and 1110 is e.
11 440 285 467 187 0 1
20 123 203 190 184 0
a_3
20 123 227 190 208 0
a_2
20 123 251 190 232 0
a_1
20 123 275 190 256 0
a_0
19 266 207 333 188 0
a_3
19 266 231 333 212 0
a_2
19 266 255 333 236 0
a_1
19 266 279 333 260 0
a_0
1 124 193 73 193
1 124 217 73 217
1 124 241 73 241
1 124 265 73 265
1 441 251 330 197
1 441 257 330 221
1 441 263 330 245
1 441 269 330 269
38 4
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
19 10 219 77 200 0
in_1
19 101 298 168 279 0
in_0
20 233 298 300 279 0
b_1
20 232 366 299 347 0
b_0
20 232 233 299 214 0
b_2
22 6 145 54 125 0 \NUL
Part B:
14 129 381 178 332
19 359 365 426 346 0
b_0
7 461 380 510 331 0 1
19 360 298 427 279 0
b_1
7 462 313 511 264 0 1
19 11 247 78 228 0
in_0
35 161 248 210 199 0 0
19 361 232 428 213 0
b_2
7 463 247 512 198 0 1
22 14 442 301 422 0 \NUL
Part B's outputs follow the given truth table.
22 14 468 297 448 0 \NUL
For example with input 1111, output is 010.
1 175 356 233 356
1 423 355 462 355
1 165 288 234 288
1 424 288 463 288
1 74 209 162 209
1 75 237 162 237
1 207 223 233 223
1 425 222 464 222
38 5
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
22 6 145 53 125 0 \NUL
Part C:
19 24 203 91 184 0
in_2
19 28 281 95 262 0
in_0
20 562 413 629 394 0
c_0
5 132 218 181 169 0
19 25 240 92 221 0
in_1
5 132 255 181 206 0
3 243 268 292 219 1 0
19 28 319 95 300 0
in_2
19 32 397 99 378 0
in_0
5 136 334 185 285 0
19 29 356 96 337 0
in_1
3 247 384 296 335 1 0
5 138 411 187 362 0
19 30 438 97 419 0
in_2
19 34 516 101 497 0
in_0
19 31 475 98 456 0
in_1
3 250 483 299 434 1 0
5 127 548 176 499 0
5 127 503 176 454 0
19 28 558 95 539 0
in_2
19 32 636 99 617 0
in_0
19 29 595 96 576 0
in_1
3 248 603 297 554 1 0
4 451 428 500 379 2 0
22 6 171 87 151 0 \NUL
Part 1 (c_0):
22 29 685 315 665 0 \NUL
Part C's outputs follow the given truth table.
22 29 709 355 689 0 \NUL
Even using different gates, the output is the same
22 29 732 249 712 0 \NUL
for every part (c_2, c_1, and c_0).
1 133 193 88 193
1 133 230 89 230
1 244 229 178 193
1 244 243 178 230
1 244 257 92 271
1 137 309 92 309
1 248 345 182 309
1 248 359 93 346
1 139 386 96 387
1 248 373 184 386
1 128 523 98 506
1 251 472 173 523
1 128 478 95 465
1 251 458 173 478
1 251 444 94 428
1 249 564 92 548
1 249 578 93 585
1 249 592 96 626
1 452 389 289 243
1 452 398 293 359
1 452 408 296 458
1 452 417 294 578
1 563 403 497 403
38 6
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
22 6 145 53 125 0 \NUL
Part C:
22 6 171 87 151 0 \NUL
Part 2 (c_1):
19 47 212 114 193 0
in_2
19 47 240 114 221 0
in_2
3 163 241 212 192 0 1
19 49 264 116 245 0
in_1
19 49 292 116 273 0
in_1
3 163 293 212 244 0 1
19 49 321 116 302 0
in_0
3 252 322 301 273 1 1
3 344 308 393 259 0 1
19 47 353 114 334 0
in_2
19 47 381 114 362 0
in_2
3 163 382 212 333 0 1
19 49 436 116 417 0
in_0
19 49 464 116 445 0
in_0
3 165 465 214 416 0 1
19 48 410 115 391 0
in_1
3 252 407 301 358 1 1
3 345 393 394 344 0 1
19 48 581 115 562 0
in_0
19 48 609 115 590 0
in_0
3 164 610 213 561 0 1
19 47 493 114 474 0
in_2
19 49 518 116 499 0
in_1
19 49 546 116 527 0
in_1
3 163 547 212 498 0 1
3 252 522 301 473 1 1
3 345 508 394 459 0 1
19 45 638 112 619 0
in_2
19 49 716 116 697 0
in_0
19 46 675 113 656 0
in_1
3 216 693 265 644 1 1
3 341 679 390 630 0 1
20 658 446 725 427 0
c_1
3 431 294 480 245 0 1
3 433 379 482 330 0 1
3 422 522 471 473 0 1
3 422 693 471 644 0 1
3 570 461 619 412 2 1
22 335 730 621 710 0 \NUL
Part C's outputs follow the given truth table.
22 335 754 661 734 0 \NUL
Even using different gates, the output is the same
22 335 777 555 757 0 \NUL
for every part (c_2, c_1, and c_0).
1 111 202 164 202
1 111 230 164 230
1 113 254 164 254
1 113 282 164 282
1 209 216 253 283
1 209 268 253 297
1 113 311 253 311
1 298 297 345 269
1 298 297 345 297
1 111 343 164 343
1 111 371 164 371
1 113 426 166 426
1 113 454 166 454
1 298 382 346 354
1 298 382 346 382
1 209 357 253 368
1 112 400 253 382
1 211 440 253 396
1 112 571 165 571
1 112 599 165 599
1 113 536 164 536
1 113 508 164 508
1 298 497 346 469
1 298 497 346 497
1 111 483 253 483
1 209 522 253 497
1 210 585 253 511
1 262 668 342 640
1 262 668 342 668
1 109 628 217 654
1 110 665 217 668
1 113 706 217 682
1 432 255 390 283
1 432 283 390 283
1 434 340 391 368
1 434 368 391 368
1 423 483 391 483
1 423 511 391 483
1 423 654 387 654
1 423 682 387 654
1 571 422 477 269
1 571 431 479 354
1 571 441 468 497
1 571 450 468 668
1 659 436 616 436
38 7
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 81 44 0 \NUL
Gu, James
22 8 96 36 76 0 \NUL
jjgu
22 6 145 53 125 0 \NUL
Part C:
22 6 171 87 151 0 \NUL
Part 3 (c_2):
19 12 211 79 192 0
in_2
19 12 239 79 220 0
in_2
19 14 263 81 244 0
in_1
19 14 291 81 272 0
in_1
4 130 240 179 191 0 1
4 135 292 184 243 0 1
20 704 473 771 454 0
c_2
19 18 607 85 588 0
in_2
19 18 661 85 642 0
in_0
19 17 634 84 615 0
in_1
19 11 316 78 297 0
in_0
19 13 341 80 322 0
in_2
19 13 369 80 350 0
in_2
4 131 370 180 321 0 1
19 15 395 82 376 0
in_1
19 18 419 85 400 0
in_0
19 18 447 85 428 0
in_0
4 136 448 185 399 0 1
19 17 475 84 456 0
in_2
19 17 552 84 533 0
in_0
19 17 580 84 561 0
in_0
4 135 581 184 532 0 1
19 16 499 83 480 0
in_1
19 16 527 83 508 0
in_1
4 137 528 186 479 0 1
4 361 623 410 574 0 1
4 361 666 410 617 0 1
4 359 706 408 657 0 1
4 471 665 520 616 1 1
4 362 492 411 443 0 1
4 362 535 411 486 0 1
4 360 575 409 526 0 1
4 472 534 521 485 1 1
4 363 360 412 311 0 1
4 363 403 412 354 0 1
4 361 443 410 394 0 1
4 473 402 522 353 1 1
4 358 230 407 181 0 1
4 358 273 407 224 0 1
4 356 313 405 264 0 1
4 468 272 517 223 1 1
4 562 488 611 439 2 1
4 638 488 687 439 0 1
22 417 720 703 700 0 \NUL
Part C's outputs follow the given truth table.
22 417 744 743 724 0 \NUL
Even using different gates, the output is the same
22 417 767 637 747 0 \NUL
for every part (c_2, c_1, and c_0).
1 76 201 131 201
1 76 229 131 229
1 78 253 136 253
1 78 281 136 281
1 82 409 137 409
1 82 437 137 437
1 77 331 132 331
1 132 359 77 359
1 81 542 136 542
1 81 570 136 570
1 80 489 138 489
1 80 517 138 517
1 407 598 472 626
1 407 641 472 640
1 405 681 472 654
1 82 597 362 584
1 82 597 362 612
1 81 624 362 627
1 81 624 362 655
1 82 651 360 695
1 82 651 360 667
1 408 467 473 495
1 408 510 473 509
1 406 550 473 523
1 409 335 474 363
1 409 378 474 377
1 407 418 474 391
1 404 205 469 233
1 404 248 469 247
1 402 288 469 261
1 81 465 363 453
1 81 465 363 481
1 183 503 363 496
1 183 503 363 524
1 181 556 361 536
1 181 556 361 564
1 182 423 362 432
1 182 423 362 404
1 79 385 364 392
1 79 385 364 364
1 177 345 364 349
1 177 345 364 321
1 75 306 357 302
1 75 306 357 274
1 181 267 359 262
1 181 267 359 234
1 176 215 359 219
1 176 215 359 191
1 514 247 563 449
1 519 377 563 458
1 518 509 563 468
1 517 640 563 477
1 608 463 639 449
1 608 463 639 477
1 684 463 705 463
39 16777215
47 0
40 1 8 8
50 800 800
51 1 30
30
System
20
700
0
0
1
2
2
34
